{
	"name": "vscode-auto-barrel",
	"displayName": "Auto Barrel for VSCode",
	"description": "üõ¢Ô∏è Automatically generate index files for your project.",
	"version": "1.6.0",
	"icon": "icon.png",
	"license": "MIT",
	"publisher": "imgildev",
	"author": "ManuelGil",
	"sponsor": {
		"url": "https://github.com/sponsors/ManuelGil"
	},
	"engines": {
		"vscode": "^1.76.0"
	},
	"categories": [
		"Other"
	],
	"keywords": [
		"auto",
		"auto-barrel",
		"barrel",
		"export",
		"index",
		"typescript",
		"javascript",
		"vscode"
	],
	"homepage": "https://github.com/ManuelGil/vscode-auto-barrel",
	"repository": {
		"type": "git",
		"url": "git+https://github.com/ManuelGil/vscode-auto-barrel.git"
	},
	"bugs": {
		"url": "https://github.com/ManuelGil/vscode-auto-barrel/issues"
	},
	"activationEvents": [
		"onLanguage:typescript",
		"onLanguage:javascript"
	],
	"main": "./out/extension.js",
	"l10n": "./l10n",
	"contributes": {
		"configuration": {
			"title": "Auto Barrel",
			"properties": {
				"autoBarrel.language.defaultLanguage": {
					"type": "string",
					"default": "TypeScript",
					"enum": [
						"TypeScript",
						"JavaScript"
					],
					"enumDescriptions": [
						"Create a TypeScript barrel",
						"Create a JavaScript barrel"
					],
					"scope": "resource",
					"description": "%autoBarrel.language.defaultLanguage%"
				},
				"autoBarrel.files.disableRecursiveBarrelling": {
					"type": "boolean",
					"default": false,
					"scope": "resource",
					"description": "%autoBarrel.files.disableRecursiveBarrelling%"
				},
				"autoBarrel.files.includeExtensionOnExport": {
					"type": "array",
					"default": [
						"ts",
						"tsx",
						"vue"
					],
					"scope": "resource",
					"description": "%autoBarrel.files.includeExtensionOnExport%"
				},
				"autoBarrel.files.ignoreFilePathPatternOnExport": {
					"type": "array",
					"default": [
						"**/*.spec.*",
						"**/*.test.*",
						"**/*.e2e.*",
						"**/index.ts",
						"**/index.js"
					],
					"scope": "resource",
					"description": "%autoBarrel.files.ignoreFilePathPatternOnExport%"
				},
				"autoBarrel.files.keepExtensionOnExport": {
					"type": "boolean",
					"default": false,
					"scope": "resource",
					"description": "%autoBarrel.files.keepExtensionOnExport%"
				},
				"autoBarrel.files.detectExportsInFiles": {
					"type": "boolean",
					"default": false,
					"scope": "resource",
					"description": "%autoBarrel.files.detectExportsInFiles%"
				},
				"autoBarrel.files.exportDefaultFilename": {
					"type": "string",
					"default": "filename",
					"enum": [
						"filename",
						"camelCase",
						"pascalCase",
						"kebabCase",
						"snakeCase"
					],
					"enumDescriptions": [
						"Use the filename as the default export.",
						"Use camelCase as the default export.",
						"Use PascalCase as the default export.",
						"Use kebab-case as the default export.",
						"Use snake_case as the default export."
					],
					"scope": "resource",
					"description": "%autoBarrel.files.exportDefaultFilename%"
				},
				"autoBarrel.formatting.excludeSemiColonAtEndOfLine": {
					"type": "boolean",
					"default": false,
					"scope": "resource",
					"description": "%autoBarrel.formatting.excludeSemiColonAtEndOfLine%"
				},
				"autoBarrel.formatting.useSingleQuotes": {
					"type": "boolean",
					"default": true,
					"scope": "resource",
					"description": "%autoBarrel.formatting.useSingleQuotes%"
				},
				"autoBarrel.formatting.endOfLine": {
					"type": "string",
					"default": "lf",
					"enum": [
						"crlf",
						"lf"
					],
					"enumDescriptions": [
						"CRLF",
						"LF"
					],
					"scope": "resource",
					"description": "%autoBarrel.formatting.endOfLine%"
				},
				"autoBarrel.formatting.insertFinalNewline": {
					"type": "boolean",
					"default": true,
					"scope": "resource",
					"description": "%autoBarrel.formatting.insertFinalNewline%"
				}
			}
		},
		"commands": [
			{
				"command": "autoBarrel.createBarrel",
				"title": "%autoBarrel.createBarrel%",
				"category": "Auto Barrel"
			},
			{
				"command": "autoBarrel.updateBarrelInFolder",
				"title": "%autoBarrel.updateBarrelInFolder%",
				"category": "Auto Barrel"
			},
			{
				"command": "autoBarrel.updateBarrel",
				"title": "%autoBarrel.updateBarrel%",
				"category": "Auto Barrel"
			}
		],
		"submenus": [
			{
				"id": "autoBarrel.folder.submenu",
				"label": "Auto Barrel"
			},
			{
				"id": "autoBarrel.file.submenu",
				"label": "Auto Barrel"
			}
		],
		"menus": {
			"explorer/context": [
				{
					"submenu": "autoBarrel.folder.submenu",
					"group": "2_workspace",
					"when": "explorerViewletFocus && explorerResourceIsFolder"
				},
				{
					"submenu": "autoBarrel.file.submenu",
					"group": "2_workspace",
					"when": "explorerViewletFocus && !explorerResourceIsFolder && resourceFilename =~ /index.(ts|js)$/"
				}
			],
			"autoBarrel.folder.submenu": [
				{
					"command": "autoBarrel.createBarrel",
					"group": "vscode-auto-barrel@1"
				},
				{
					"command": "autoBarrel.updateBarrelInFolder",
					"group": "vscode-auto-barrel@1"
				}
			],
			"autoBarrel.file.submenu": [
				{
					"command": "autoBarrel.updateBarrel",
					"group": "vscode-auto-barrel@1"
				}
			]
		},
		"jsonValidation": [
			{
				"fileMatch": ".vscode/settings.json",
				"url": "./schemas/config.schema.json"
			}
		]
	},
	"scripts": {
		"vscode:prepublish": "npm run compile",
		"compile": "rimraf out && tsc -p ./",
		"watch": "tsc -watch -p ./",
		"pretest": "npm run compile && npm run lint",
		"format": "prettier --write 'src/**/*.ts'",
		"lint": "eslint \"src\"",
		"lint:fix": "eslint \"src\" --fix",
		"test": "node ./out/test/runTest.js",
		"compodoc": "npx compodoc -p tsconfig.doc.json -d compodoc --theme readthedocs -s",
		"prepare": "husky"
	},
	"devDependencies": {
		"@commitlint/cli": "^19.5.0",
		"@commitlint/config-conventional": "^19.5.0",
		"@compodoc/compodoc": "^1.1.26",
		"@eslint/js": "^9.14.0",
		"@types/glob": "^8.1.0",
		"@types/mocha": "^10.0.9",
		"@types/node": "^22.9.0",
		"@types/vscode": "^1.76.0",
		"@vscode/l10n-dev": "^0.0.35",
		"eslint": "^9.14.0",
		"glob": "^11.0.0",
		"globals": "^15.12.0",
		"husky": "^9.1.6",
		"lint-staged": "^15.2.10",
		"minimatch": "^10.0.1",
		"mocha": "^10.8.2",
		"prettier": "3.3.3",
		"rimraf": "^6.0.1",
		"typescript": "^5.4.5",
		"typescript-eslint": "^8.13.0",
		"vscode-test": "^1.6.1"
	}
}
